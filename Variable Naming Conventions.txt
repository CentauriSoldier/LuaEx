Variables are prefixed with the following lower-case symbols based on their type/application.
a   |   array
b	|	boolean
c	|	class
e	|	enum
f	| 	function
h	|	file\window\etc. handle (number)
n	|	number
o	|	class/other (object)
p	|	file/dir path (string)
r	|	struct
s	|	string
t	|	table
u	| 	userdata
v	|	variable/unknowm type
z	|	type (string) (e.g., "string", "table", etc.)

Types ignored by this convention are types nil and null since prefixing such a variable type would, generally, serve no real purpose.

Exceptions:
In for loops, sometimes 'x' is used to indicate active index while 'k' and 'v' are used (when using pairs/ipairs) to reference the key and value of a table respectively. This shorthand is used often when the purpose and process of the loop is self-evident or easily determined at a glance.

In class methods, the first two arguments--the instance object and the class data table respectively) are written as 'this' and 'cdat' while the third argument in a child class constructor (the parent constructor) is written as 'super'. Additionly, In any method that accepts the input of another class instance, the variable is written as 'other.' This intetional and obvious deviation from convention makes these variables stand out clearly.
